---------HIFI School Project-------

create table student(Student_no varchar2(10) constraints pk_student primary key,
		Student_Name varchar2(50),
		Father_Name varchar2(50),
		Mother_Name varchar2(50),
		DOB date,
		DOJ date,
		Address varchar2(150),
		Admission_No number(10),
		Created_By varchar2(50),
		Creation_Date date,
		Last_Updated_by varchar2(50),
		Last_Updation_Date date);

create sequence Student_No
start with 001
increment by 1
minvalue 001;

create sequence Admission_No
start with 1000
increment by 1;

create or replace procedure in_Student_Admission(Student_Name varchar2,Father_Name varchar2,Mother_Name varchar2,DOB date,Address varchar2)
is
begin
insert into student values(to_char(sysdate,'YY')||'HIFI'||Student_No.nextval,Student_Name,Father_Name,Mother_Name,DOB,sysdate,Address,Admission_No.nextval,user,sysdate,user,sysdate);
commit;
end;
/

execute in_Student_Admission('Bandaram Raju','Kistaiah','Aruna Devi','15-oct-1992','Siddipet');

execute in_Student_Admission('Peddolla Ravi Kumar','Sailoo','Ramavva','13-nov-1993','Hyderabad');

execute in_Student_Admission('Thouta Sukesh Kumar','Indrasen','Raja Laxmi','06-nov-1993','Medak');

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table class(Class_Id varchar2(50) constraints pk_Class primary key,
		   Class_No number(10),
		   class_Name varchar2(50),
		   Section_Name varchar2(50),
		   Section_Teacher varchar2(50),
		   Section_Incharge varchar2(50),
		   Section_Strength number(10),
		   Room_No number(15),
		   Year number(5),
		   Created_By varchar2(50),
		   Creation_Date date,
		   Last_Updated_By varchar2(50),
		   Last_Updation_Date date);
create sequence Class_Id
start with 001
increment by 1
minvalue 001;

create sequence Class_No
start with 100
increment by 1;

--*class_Name should be like "10th Class","9th Class","8th Class"...etc.

create or replace procedure in_Class_Details(Class_Name varchar2,section_Name varchar2,Section_Teacher varchar2,Section_Incharge varchar2,Section_Strength number,Room_No number,Year number)
is
begin
if Class_Name='10th Class' then
insert into class values(substr(Class_Name,1,4)||'_'||'HIFI'||'_'||Class_Id.nextval,seq_Class_No.nextval,Class_Name,Section_Name,Section_Teacher,Section_Incharge,Section_Strength,Room_No,Year,user,sysdate,user,sysdate);
else
insert into class values(substr(Class_Name,1,3)||'_'||'HIFI'||'_'||Class_Id.nextval,seq_Class_No.nextval,Class_Name,Section_Name,Section_Teacher,Section_Incharge,Section_Strength,Room_No,Year,user,sysdate,user,sysdate);
end if;
commit;
end;
/

execute in_class_Details('10th Class','Sec-A','Ameena','SaiBaba',50,101,2016);

execute in_class_Details('10th Class','Sec-B','Sudheer','SaiBaba',30,102,2016);

execute in_class_Details('9th Class','Sec-A','Shilaja','SaiBaba',50,103,2016);

execute in_class_Details('9th Class','Sec-B','Shravan','SaiBaba',30,104,2016);

execute in_class_Details('8th Class','Sec-A','Govardhan','Chandra Shekar',50,105,2016);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     create table terms(Term_Id varchar2(20) constraints pk_terms primary key,
			Term_Name varchar2(30),
			Term_Duration number(10),
			Term_Start_Date date,
			Term_End_date date,
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create sequence term_Id
start with 1
increment by 1;

insert into terms values('Term_'||term_Id.nextval,'First_Term',90,'12-june-2016','12-aug-2016',user,sysdate,user,sysdate);

insert into terms values('Term_'||term_Id.nextval,'Second_Term',90,'01-sep-2016','30-oct-2016',user,sysdate,user,sysdate);

insert into terms values('Term_'||term_Id.nextval,'Third_Term',90,'15-nov-2016','28-feb-2017',user,sysdate,user,sysdate);

insert into terms values('Term_'||term_Id.nextval,'fourth_Term',90,'15-mar-2017','01-june-2017',user,sysdate,user,sysdate);

-------------------------------------------------------------------------------------------------------------------------------------

create table subjects(Subject_Id varchar2(20) constraints pk_subject primary key,
			Subject_Name varchar(50) not null,
			Subject_Max_Marks number(10) not null,
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create sequence Subject_Id
start with 01
increment by 1;

create or replace procedure in_Subjects_Details(Subject_Name varchar2,max_marks number)
is
begin
insert into subjects values(substr(subject_Name,1,3)||'_'||subject_Id.nextval,Subject_Name,max_marks,user,sysdate,user,sysdate);
commit;
end;
/


execute in_Subjects_Details('Telugu',100);

execute in_Subjects_Details('Hindi',100);

execute in_Subjects_Details('English',100);

execute in_Subjects_Details('Mathmetics',100);

execute in_Subjects_Details('Science',100);

execute in_Subjects_Details('Social',100);
----------------------------------------------------------------------------------------------------------------------------------------
create table teachers(Teacher_Id varchar2(20) constraints pk_Teacher primary key,
			Teacher_Name varchar2(20) not null,
			DOB date,
			DOJ date,
			Gender char(6) check(Gender in('M','F','m','f','male','female','MALE','FEMALE','Female','Male')),
			Father_Name varchar2(50),
			Mother_Name varchar2(50),
			Spouse_Name varchar2(50),
			Grade varchar2(20),
			Insurance_Name varchar2(50),
			Insurance_Premium number(11,2),
			Insurance_Valid_Till date,
			Insured_amount number(11,2),
			Insurance_Number varchar2(40),
			Total_Experience number(5),
			Subject_Matter_Expert varchar2(30),
			Value_Additions varchar2(50),
			If_Refferenced_By varchar2(50),
			Interviewed_By varchar2(50),
			Interviewed_Date date,
			PAN_Card_Number varchar2(50),
			Bank_Account_Number number(30),
			Address varchar2(80),
			Email_Id varchar2(50),
			Mobile number(10) check(length(Mobile)=10) not null,--no need to add country code
			Emergency_Contact varchar2(50),
			Emergency_Contact_Mobile number(10) check(length(Emergency_Contact_Mobile)=10) not null,
			Previous_Organisation varchar2(50),
			Previous_Org_Annual_Income number(11,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create sequence teacher_Id
start with 100
increment by 1;

create or replace procedure in_Teacher_Details(Teacher_Name varchar2,
DOB date,
DOJ date,
Gender char,
Father_Name varchar2,
Mother_Name varchar2,
Spouse_Name varchar2,
Grade varchar2,
Insurance_Name varchar2,
Insurance_Premium number,
Insurance_Valid_Till date,
Insurance_Amount number,
Insurance_Number varchar2,
Total_Experience number,
Subject_Matter_Expert varchar2,
Value_Additions varchar2,
If_Refferenced_By varchar2,
Interviewed_By varchar2,
Interviewed_Date date,
PAN_Card_Number varchar2,
Bank_Account_Number number,
Address varchar2,
EMail_Id varchar2,
Mobile number,
Emer_Contact varchar2,
Emer_Contact_Mobile number,
Previous_Org varchar2,
Previous_Org_Income number)
is
begin
insert into teachers values('HIFI_Teacher'||Teacher_Id.nextval,Teacher_Name,DOB,DOJ,Gender,Father_Name,Mother_Name,Spouse_Name,Grade,Insurance_Name,Insurance_Premium,Insurance_Valid_Till,Insurance_Amount,Insurance_Number,Total_Experience,Subject_Matter_Expert,Value_Additions,If_Refferenced_By,Interviewed_By,Interviewed_Date,PAN_Card_Number,Bank_Account_Number,Address,EMail_Id,Mobile,Emer_Contact,Emer_Contact_Mobile,Previous_Org,Previous_Org_Income,user,sysdate,user,sysdate);
/*--if (select count(1) from teachers t
where exists(select * from teachers
		where teacher_Name=t.teacher_Name
                    and
                    DOB=t.DOB
                    and
                    Mobile=t.Mobile))=0 then */
commit;
/*--else
rollback; */
end;
/

execute in_Teacher_Details('SaiBaba','01-jan-1985','29-may-2016','Male','Vishnu','Lakshmi','Padma','','',NULL,'',NULL,'',10,'Mathmetics','','','Chiranjeevi','25-may-2016','',32060208194,'Vizag','',9988776655,'Sathish',9900889911,'HPS,Begumpet',500000);

execute in_Teacher_Details('Srinivas','05-May-1982','2-june-2016','Male','Laxman','Badramma','Mounika','','',NULL,'',NULL,'',18,'Social','','','Chiranjeevi','25-may-2016','',32060221194,'Medak','',9908897008,'SandeepGoud',8500205507,'DPS,Hyderabad',900000);

execute in_Teacher_Details('Ravinder','01-june-1978','25-june-2016','Male','PochaGoud','KasturiBai','Jalaja','','',NULL,'',NULL,'',22,'Science','','','Chiranjeevi','25-may-2016','',32081208194,'Toopran','',9912345678,'venkatnarsaiah',9900882211,'Goutham Model School',1000000);

execute in_Teacher_Details('Sandeep','25-sep-1990','6-may-2016','Male','Kistaiah','Aruna','','','',NULL,'',NULL,'',5,'Telugu','','','Chiranjeevi','25-may-2016','',32078908194,'Siddipet','',8500301843,'Kistaiah',9989430867,'Sri Vani High School',320000);

execute in_Teacher_Details('Hareesh','07-oct-1990','2-june-2016','Male','LaxmanGoud','Padma',' ','','',NULL,'',NULL,'',Null,'English','','','Chiranjeevi','25-may-2016','',32060331194,'Hyderabad','',9908898899,'RajeshGoud',8500204567,'',NULL);

execute in_Teacher_Details('Kistaiah','12-may-1975','25-june-2016','Male','Venkataiah','Narsamma','Aruna Devi','','',NULL,'',NULL,'',15,'Hindi','','','Chiranjeevi','25-may-2016','',32081298194,'warangal','',9989430867,'raju',9951833517,'ZPHS Ankshapur',1000000);

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table staff(Staff_Id varchar2(20) primary key,
			Staff_Name varchar2(50) not null,
			DOB date,
			DOJ date,
			Gender varchar2(10) check(Gender in('M','F','m','f','male','female','MALE','FEMALE','Female','Male')),
			Father_Name varchar2(50),
			Mother_Name varchar2(50),
			Spouse_Name varchar2(50),
			Grade varchar2(20),
			Insurance_Name varchar2(50),
			Insurance_Premium number(11,2),
			Insurance_Valid_Till date,
			Insured_amount number(11,2),
			Insurance_Number varchar2(50),
			Total_Experience varchar2(20),
			Subject_Matter_Expert varchar2(50),
			Value_Additions varchar2(50),
			If_Refferenced_By varchar2(50),
			Interviewed_By varchar2(50),
			Interviewed_Date date,
			PAN_Card_Number varchar2(50),
			Bank_Account_Number varchar2(30),
			Address varchar2(100),
			Email_Id varchar2(50),
			Mobile number(10) check(length(Mobile)=10) not null,--no need to soecift country code
			Emergency_Contact varchar2(50),
			Emergency_Contact_Mobile number(10) check(length(Emergency_Contact_Mobile)=10) not null,
			Previous_Organisation varchar2(50),
			Previous_Org_Annual_Income number(11,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create sequence staff_Id
start with 100
increment by 1;

create or replace procedure in_staff_Details(Staff_Name varchar2,
DOB date,
DOJ date,
Gender varchar2,
Father_Name varchar2,
Mother_Name varchar2,
Spouse_Name varchar2,
Grade varchar2,
Insurance_Name varchar2,
Insurance_Premium number,
Insurance_Valid_Till date,
Insurance_Amount number,
Insurance_Number varchar2,
Total_Experience number,
Subject_Matter_Expert varchar2,
Value_Additions varchar2,
If_Refferenced_By varchar2,
Interviewed_By varchar2,
Interviewed_Date date,
PAN_Card_Number varchar2,
Bank_Account_Number varchar2,
Address varchar2,
EMail_Id varchar2,
Mobile number,
Emer_Contact varchar2,
Emer_Contact_Mobile number,
Previous_Org varchar2,
Previous_Org_Income number)
is
begin
insert into staff values('HIFI_staff'||staff_Id.nextval,staff_Name,DOB,DOJ,Gender,Father_Name,Mother_Name,Spouse_Name,Grade,Insurance_Name,Insurance_Premium,Insurance_Valid_Till,Insurance_Amount,Insurance_Number,Total_Experience,Subject_Matter_Expert,Value_Additions,If_Refferenced_By,Interviewed_By,Interviewed_Date,PAN_Card_Number,Bank_Account_Number,Address,EMail_Id,Mobile,Emer_Contact,Emer_Contact_Mobile,Previous_Org,Previous_Org_Income,user,sysdate,user,sysdate);
commit;
end;
/

execute in_staff_Details('Joseph','25-sep-1980','6-may-2016','Male','devid','mamatha','regina','','',NULL,'',NULL,'',5,'','','','Chiranjeevi','25-may-2016','','32078908194','Siddipet','',8500301843,'Kistaiah',9989430867,'Sri Vani High School',320000);

execute in_staff_Details('zameer','27-jan-1994','2-june-2016','Male','nazeer','saida',' ','','',NULL,'',NULL,'',Null,'','','','Chiranjeevi','25-may-2016','','32060345194','Medak','',9533663236,'nazeer',9876543210,'',NULL);

execute in_staff_Details('Mahesh','12-oct-1985','25-june-2016','Male','Veeraiah','Narsamma','swapna','','',NULL,'',NULL,'',15,'','','','Chiranjeevi','25-may-2016','','32081298194','warangal','',9989430867,'raju',9951833517,'ZPHS Ankshapur',1000000);

execute in_staff_Details('Ramanujam','15-aug-1976','6-may-2016','Male','mallesh','Ramamma','','','',NULL,'',NULL,'',5,'','','','Chiranjeevi','25-may-2016','','32078908164','Siddipet','',8500307843,'Kistaiah',9989435867,'Sri Vani High School',320000);

execute in_staff_Details('Raman','27-jan-1984','2-june-2016','Male','pavan','swathi','Mounika','','',NULL,'',NULL,'',Null,'','','','Chiranjeevi','25-may-2016','','32060355194','Medak','',9553663236,'nazeer',9876543210,'',NULL);

execute in_staff_Details('Archana','12-oct-1988','25-june-2016','female','Ramdas','Rajalakshmi','Pushpa','','',NULL,'',NULL,'',15,'','','','Chiranjeevi','25-may-2016','','32481298194','warangal','',9989430967,'raju',9951663517,'ZPHS Ankshapur',1000000);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table marks(Marks_Id varchar2(20) primary key,
		Class_Id varchar2(20) references class(Class_Id),
		Student_No varchar2(20) references student(Student_No),
		Term_Id varchar2(20) references terms(Term_Id),
		Subject_Id varchar2(20) references subjects(Subject_Id),
		Subject_Marks_Secured number(4),
		Answer_Sheet_Corrected_By varchar2(50) references teachers(Teacher_Id),
		Created_By varchar2(50),
		Creation_Date date,
		Last_Updated_By varchar2(20),
		Last_Updation_Date date);

create sequence Marks_Id
start with 1
increment by 1;

create or replace procedure in_Student_marks( class_Id varchar2, /* --'10th_HIFI_1','10th_HIFI_2',..,'1st_HIFI_2/1' */
						Student_No varchar2, /* --'16HIFI1','16HIFI2',.. */
						Term_Id varchar2, /* ---'Term_1','Term_2','Term_3','Term_4' */
						Subject_Id varchar2, /* ---'Tel_1','Hin_2','Eng_3','Mat_4','Sci_5','Soc_6' */
						Subject_Marks_Secured number,
						Answer_Sheet_Corrected_By varchar2)
is
begin
insert into marks values(Student_No||'_'||Marks_Id.nextval,Class_Id,Student_No,Term_Id,Subject_Id,Subject_Marks_Secured,Answer_Sheet_Corrected_By,user,sysdate,user,sysdate);
commit;
end;
/


execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Tel_1',70,'HIFI_Teacher162');

execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Hin_2',65,'HIFI_Teacher164');

execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Eng_3',45,'HIFI_Teacher163');

execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Mat_4',90,'HIFI_Teacher140');

execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Sci_5',50,'HIFI_Teacher161');

execute in_Student_marks('10th_HIFI_1','16HIFI1','Term_1','Soc_6',92,'HIFI_Teacher160');


execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Tel_1',40,'HIFI_Teacher162');

execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Hin_2',35,'HIFI_Teacher164');

execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Eng_3',20,'HIFI_Teacher163');

execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Mat_4',17,'HIFI_Teacher140');

execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Sci_5',88,'HIFI_Teacher161');

execute in_Student_marks('10th_HIFI_1','16HIFI2','Term_1','Soc_6',65,'HIFI_Teacher160');


execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Tel_1',55,'HIFI_Teacher162');

execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Hin_2',45,'HIFI_Teacher164');

execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Eng_3',45,'HIFI_Teacher163');

execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Mat_4',49,'HIFI_Teacher140');

execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Sci_5',48,'HIFI_Teacher161');

execute in_Student_marks('10th_HIFI_1','16HIFI3','Term_1','Soc_6',60,'HIFI_Teacher160');
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table fee_master(Fee_Id varchar2(20) constraints pk_fee_master primary key,
			Fee_Description varchar2(50) not null,
			Fee_For_Year varchar2(10),
			Fee_Validity_Start_Date date,
			Fee_validity_End_Date date,
			Discount_General number(9,2),
			Discount_If_Referral number(9,2),
			Discount_If_Exam_Qualified number(9,2),
			Discount_If_Topper number(9,2),
			Discount_special_Case number(9,2),
			Discount_If_Handicapped number(9,2),
			Discount_If_Staff_Referral number(9,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create sequence fee_id
start with 1000
increment by 1;

create or replace procedure in_fee_master(Fee_Description varchar2,Fee_For_Year varchar2,
			Fee_Validity_Start_Date date,
			Fee_validity_End_Date date,
			Discount_General number,
			Discount_If_Referral number,
			Discount_If_Exam_Qualified number,
			Discount_If_Topper number,
			Discount_special_Case number,
			Discount_If_Handicapped number,
			Discount_If_Staff_Referral number)
is
begin
insert into fee_master values('fee'||fee_id.nextval,Fee_Description,Fee_For_Year,Fee_Validity_Start_Date,Fee_validity_End_Date,Discount_General,Discount_If_Referral,Discount_If_Exam_Qualified,Discount_If_Topper,Discount_special_Case,Discount_If_Handicapped,Discount_If_Staff_Referral,user,sysdate,user,sysdate);
commit;
end;
/



execute in_fee_master('Tution fee','2016','12-june-2016','15-oct-2016',10,NULL,NULL,NULL,NULL,NULL,NULL);

execute in_fee_master('Tution fee','2016','12-june-2016','15-oct-2016',NULL,10,NULL,NULL,NULL,NULL,NULL);

execute in_fee_master('Tution fee','2016','12-june-2016','15-oct-2016',NULL,NULL,10,NULL,NULL,NULL,NULL);
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table sports_Master(Sports_Id varchar2(20) constraints Sports_pk primary key,
				Sports_Description varchar2(50) not null,
				Kits_Available varchar2(5) check(Kits_Available in('yes','no','YES','NO','No','Yes')),
				Kits_Used varchar2(50),
				Kits_Refilled_By varchar2(50),
				Kits_Checked_By varchar2(50),
				If_Donated_By varchar2(50),
				If_Donated_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence Sports_Id
start with 100
increment by 1;

create or replace procedure in_sports_master(Sports_Description varchar2,
				Kits_Available varchar2,
				Kits_Used varchar2,
				Kits_Refilled_By varchar2,
				Kits_Checked_By varchar2,
				If_Donated_By varchar2)
is
begin
insert into sports_master values('sports'||sports_id.nextval,Sports_Description,Kits_Available,Kits_Used,Kits_Refilled_By,Kits_Checked_By,If_Donated_By,sysdate,user,sysdate,user,sysdate);
commit;
end;
/

 exec in_sports_master('Cricket','yes','','','HIFI_staff105','');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table class_wise_sports(CWS_Id varchar2(20) constraints CWS_pk primary key,
				Sports_Id varchar2(20) references sports_Master(Sports_Id),
				Class_Id varchar2(20) references class(Class_Id),
				Allocation_To_Section_By varchar2(50),
				Allocation_To_Section_Date date,
				Change_Notes varchar2(80),
				Change_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create sequence CWS_Id
start with 100
increment by 1;

create or replace procedure in_class_wise_sports(Sports_Id varchar2,
				Class_Id varchar2,
				Allocation_To_Section_By varchar2,
				Allocation_To_Section_Date date,
				Change_Notes varchar2)
is
begin
insert into class_wise_sports values('CWS'||CWS_Id.nextval,Sports_Id,Class_Id,Allocation_To_Section_By,Allocation_To_Section_Date,Change_Notes,sysdate,user,sysdate,user,sysdate);
commit;
end;
/


exec in_class_wise_sports('sports100','10th_HIFI_1','','','');
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table sports_participation(Sports_Part_Id varchar2(20) constraints SP_ID_pk primary key,
					Sports_Id varchar2(20) references sports_master(Sports_Id),
					CWS_Id varchar2(20) references class_wise_sports(CWS_Id),
					Student_No varchar2(10) references student(Student_No),
					Participation_Date date,
					Prize_Name varchar2(50),
					Prize_Date date,
					Prize_Given_By varchar2(50),
					Prize_For varchar2(50),
					Coach_Comments varchar2(100),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create sequence Sports_Part_Id
start with 100
increment by 1
cache 100;


create or replace procedure in_sports_participation(Sports_Id varchar2,
					CWS_Id varchar2,
					Student_No varchar2,
					Participation_Date date,
					Prize_Name varchar2,
					Prize_Date date,
					Prize_Given_By varchar2,
					Prize_For varchar2,
					Coach_Comments varchar2)
is
begin
insert into sports_participation values('SP'||Sports_Part_Id.nextval,Sports_Id,CWS_Id,Student_No,Participation_Date,Prize_Name,Prize_Date,Prize_Given_By,Prize_For,Coach_Comments,user,sysdate,user,sysdate);
commit;
end;
/


exec in_Sports_participation('sports100','CWS101','16HIFI1','20-jun-2016','First Prize','15-aug-2016','Pricipal','Winner in Cricket','Congrats');
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table sports_fee_payments(Sports_Fee_Payment_Id varchar2(50) constraints SPF_pk primary key,
				Term_Id varchar2(20) references terms(Term_Id),
				Sports_Id varchar2(20) references sports_master(Sports_Id),
				Sports_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(30),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id) not null,
				Fee_Receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar(50),
				Last_Updation_Date date);

create sequence SPF_Id
start with 100
increment by 1
cache 100;

create or replace procedure in_sports_fee_payments(Term_Id varchar2,Sports_Id varchar2,Sports_Fee_Amount number,Fee_To_Be_Paid_Before varchar2,Student_No varchar2,Fee_Amount number,Fee_Penalty number,Fee_Paid_Mode varchar2,Fee_Paid_By varchar2,Fee_Received_By varchar2)
is
begin
insert into sports_fee_payments values('SPF'||SPF_Id.nextval,Term_Id,Sports_Id,Sports_Fee_Amount,Fee_To_Be_Paid_Before,Student_No,Fee_Amount,sysdate,Fee_Penalty,Fee_Paid_Mode,Fee_Paid_By,Fee_Received_By,'HIFI_Fee'||fee_receipt.nextval,user,sysdate,user,sysdate);
commit;
end;
/


exec in_sports_fee_payments('Term_1','sports100',5000,'no','16HIFI1',5000,NULL,'CASH','Raju','HIFI_staff105');
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table extra_curr_act_payments(ECAFP_Id varchar2(20) constraints ECAFP_pk primary key,
					Term_Id varchar2(20) references terms(Term_Id),
					Sports_Id varchar2(20) references sports_master(Sports_Id),
					Extra_Curr_Fee_Amount number(11,2),
					Fee_To_Be_Paid_Before varchar2(20),
					Student_No varchar2(20) references student(Student_No),
					Fee_Amount number(11,2),
					Fee_Paid_Date date,
					Fee_Penalty number(11,2),
					Fee_Paid_Mode varchar2(20),
					Fee_Paid_By varchar2(50),
					Fee_Received_By varchar2(20) references staff(Staff_Id),
					Fee_Receipt_Id varchar2(20),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create sequence ECAFP_Id
start with 1000
increment by 1
cache 50;


create or replace procedure in_extra_curr_act_payments(Term_Id varchar2,Sports_Id varchar2,Extra_Curr_Fee_Amount number,Fee_To_Be_Paid_Before varchar2,Student_No varchar2,Fee_Amount number,Fee_Penalty number,Fee_Paid_Mode varchar2,Fee_Paid_By varchar2,Fee_Received_By varchar2)
is
begin
insert into extra_curr_act_payments values('ECAF'||ECAFP_Id.nextval,Term_Id,Sports_Id,Extra_Curr_Fee_Amount,Fee_To_Be_Paid_Before,Student_No,Fee_Amount,sysdate,Fee_Penalty,Fee_Paid_Mode,Fee_Paid_By,Fee_Received_By,'HIFI_Fee'||fee_receipt.nextval,user,sysdate,user,sysdate);
commit;
end;
/


exec in_extra_curr_act_payments('Term_1','sports100',5000,'no','16HIFI1','5000',NULL,'cash','raju','HIFI_staff105');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create type Vehicle_List is varray(20) of varchar2(20);
/

create table transport(Transport_Route_Id varchar2(20) constraints transport_pk primary key,
			Route_Name varchar2(20),
			Route_Planned_Month_Year varchar2(20),
			Route_Valid_Till date,
			Route_Coordinator varchar2(50),
			Route_Grievance_Officer varchar2(50),
			Route_Grievance_Ph_No number(10) check(length(Route_Grievance_Ph_No)=10),
			Route_Vehicle_Number_List Vehicle_List,
			Route_Distance number(5),
			Route_TAT_Estimation varchar2(20),
			Route_TAT_Estimation_By varchar2(50),
			Route_Start_Point varchar2(30),
			Route_End_Point varchar2(30),
			Route_Prime_Driver varchar2(20) references staff(Staff_Id),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar(50),
			Last_Updation_Date date);

create sequence Transport_Id
start with 100
increment by 1
cache 50;


create or replace procedure in_transport(Route_Name varchar2,
					Route_Planned_Month_Year varchar2,
					Route_Coordinator varchar2,
					Route_Grievance_Officer varchar2,
					Route_Grievance_Ph_No number,
					Route_Vehicle_Number_List Varchar2,
					Route_Distance number,
					Route_TAT_Estimation varchar2,
					Route_TAT_Estimation_By varchar2,
					Route_Start_Point varchar2,
					Route_End_Point varchar2,
					Route_Prime_Driver varchar2)
is
begin
insert into transport values('Route_'||Transport_Id.nextval,
				Route_Name,
				Route_Planned_Month_Year,
				add_months(sysdate,6),
				Route_Coordinator,
				Route_Grievance_Officer,
				Route_Grievance_Ph_No,
				Vehicle_List(Route_Vehicle_Number_List),
				Route_Distance,
				Route_TAT_Estimation,
				Route_TAT_Estimation_By,
				Route_Start_Point,	
				Route_End_Point,
				Route_Prime_Driver,
				user,
				sysdate,
				user,
				sysdate);
commit;
end;
/


exec in_transport('Hyd-Mdk','jun-oct','','',NULL,'TS15tr7606',100,'3hr','','Medak','School','HIFI_staff104');
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table transport_enrollments_roaster(TR_Enroll_Roaster_Id varchar2(20) constraints tr_roaster_pk primary key,
						Transport_Route_Id varchar2(50) references transport(Transport_Route_Id),
						Student_No varchar2(20) references student(Student_No),
						Enrollment_Date date,
						Enrollment_Start_Date date,
						Enrollment_End_Date date,
						Created_By varchar2(50),
						Creation_Date date,
						Last_Updated_By varchar(50),
						Last_Updation_Date date);

create sequence tr_roaster_Id
start with 100
increment by 1
cache 50;

create or replace procedure in_transport_roaster(Transport_Route_Id varchar2,Student_No varchar2,Enrollment_Date date,Enrollment_Start_Date date,Enrollment_End_Date date)
is
begin
insert into transport_enrollments_roaster values('Tr_Roaster'||tr_roaster_Id.nextval,Transport_Route_Id,Student_No,Enrollment_Date,Enrollment_Start_Date,Enrollment_End_Date,user,sysdate,user,sysdate);
commit;
end;
/

exec in_transport_roaster('Route_100','16HIFI1',sysdate,sysdate,add_months(sysdate,6));
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table sports_participation(Sports_Part_Id varchar2(20) constraints SP_ID_pk primary key,
					Sports_Id varchar2(20) references sports_master(Sports_Id),
					CWS_Id varchar2(20) references class_wise_sports(CWS_Id),
					Student_No varchar2(10) references student(Student_No),
					Participation_Date date,
					Prize_Name varchar2(50),
					Prize_Date date,
					Prize_Given_By varchar2(50),
					Prize_For varchar2(50),
					Coach_Comments varchar2(100),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create sequence Sports_Part_Id
start with 100
increment by 1
cache 100;


create or replace procedure in_sports_participation(Sports_Id varchar2,
					CWS_Id varchar2,
					Student_No varchar2,
					Participation_Date date,
					Prize_Name varchar2,
					Prize_Date date,
					Prize_Given_By varchar2,
					Prize_For varchar2,
					Coach_Comments varchar2)
is
begin
insert into sports_participation values('SP'||Sports_Part_Id.nextval,Sports_Id,CWS_Id,Student_No,Participation_Date,Prize_Name,Prize_Date,Prize_Given_By,Prize_For,Coach_Comments,user,sysdate,user,sysdate);
commit;
end;
/


exec in_Sports_participation('sports100','CWS101','16HIFI1','20-jun-2016','First Prize','15-aug-2016','Pricipal','Winner in Cricket','Congrats');
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table extra_curr_act_participation(ECAP_ID varchar2(20) constraints Extra_curr_part_pk primary key,
						CWS_Id varchar2(20) references class_wise_sports(CWS_Id),
						Student_No varchar2(20) references student(Student_No),
						Participation_Date date,
						Prize_Name varchar2(50),
						Prize_Date date,
						Prize_Given_By varchar2(50),
						Prize_For varchar2(50),
						Coach_Comments varchar2(100),
						Created_By varchar2(50),
						Creation_Date date,
						Last_Updated_By varchar2(50),
						Last_Updation_Date date); 


create sequence ECAP_Id
start with 100
increment by 1;


create or replace procedure in_extra_curr_participation(CWS_Id varchar2,Student_No varchar2,Participation_Date date,Prize_Name varchar2,Prize_Date date,Prize_Given_By varchar2,Prize_For varchar2,Coach_Comments varchar2)
is
begin
insert into extra_curr_act_participation values('ECAP-'||ECAP_Id.nextval,CWS_Id,Student_No,Participation_Date,Prize_Name,Prize_Date,Prize_Given_By,Prize_For,Coach_Comments,user,sysdate,user,sysdate);
commit;
end;
/


exec in_extra_curr_participation('CWS101','16HIFI1','20-jun-2016','First Prize','15-aug-16','Principal','Winner in kabaddi','no comments');
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table library_master(Library_Id varchar2(20) constraints library_pk primary key,
				Arranged_Year varchar2(20),
				Rack_No varchar2(20),
				Book_Id_If_exists varchar2(30),
				Book_Name varchar2(50),
				Book_Category varchar2(30),
				Author varchar2(50),
				Book_Version varchar2(50),
				Useful_For_Section varchar2(20) references class(Class_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create sequence Library_Id
start with 1000
increment by 1;


create or replace procedure in_library_master(Arranged_Year varchar2,Rack_No varchar2,Book_Id_If_exists varchar2,Book_Name varchar2,Book_Category varchar2,Author varchar2,Book_Version varchar2,Useful_For_Section varchar2)
is
begin
insert into library_master values('HIFI_Library'||Library_Id.nextval,Arranged_Year,Rack_No,Book_Id_If_exists,Book_Name,Book_Category,Author,Book_Version,Useful_For_Section,user,sysdate,user,sysdate);
commit;
end;
/

exec in_library_master('10th-Class','10-A','','telugu','language','','2016','');
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table library_in_out_details(LIOD_Id varchar2(20) constraints Library_INOUT_pk primary key,
					Library_Id varchar(20) references library_master(Library_Id),
					Book_Issued_To_Student varchar2(20) references student(Student_No),
					Book_Issued_By varchar2(50),
					Book_Issud_To varchar2(50),
					Book_Return_Due_Date date,
					Actual_Book_Returned_Date date,
					Book_Collected_By varchar2(20) references staff(Staff_Id),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);

create sequence Library_In_Out
start with 1000
increment by 1;

create or replace procedure in_library_in_out(Library_Id varchar,Book_Issued_To_Student varchar2,Book_Issued_By varchar2,Book_Issud_To varchar2,Actual_Book_Returned_Date date,Book_Collected_By varchar2)
is
begin
insert into library_in_out_details values('Library_InOut'||Library_In_Out.nextval,Library_Id,Book_Issued_To_Student,Book_Issued_By,Book_Issud_To,add_months(sysdate,1),Actual_Book_Returned_Date,Book_Collected_By,user,sysdate,user,sysdate);
commit;
end;
/

exec in_library_in_out('HIFI_Library1003','16HIFI1','','','','');
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table library_payments(Lib_Payment_Id varchar2(20) constraints library_payment_pk primary key,
				Library_Id varchar2(20) references library_master(Library_Id),
				LIOD_Id varchar2(20) references library_in_out_details(LIOD_Id),
				Library_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(50),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id),
				Fee_Receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create sequence library_payment
start with 1000
increment by 1;

create or replace procedure in_library_payments(Library_Id varchar2,LIOD_Id varchar2,Library_Fee_Amount number,Fee_To_Be_Paid_Before varchar2,Student_No varchar2,Fee_Amount number,Fee_Paid_Date date,Fee_Penalty number,Fee_Paid_Mode varchar2,Fee_Paid_By varchar2,Fee_Received_By varchar2)
is
begin
insert into library_payments values('Library_Fee-'||library_payment.nextval,Library_Id,LIOD_Id,Library_Fee_Amount,Fee_To_Be_Paid_Before,Student_No,Fee_Amount,Fee_Paid_Date,Fee_Penalty,Fee_Paid_Mode,Fee_Paid_By,Fee_Received_By,'HIFI_Fee'||fee_receipt.nextval,user,sysdate,user,sysdate);
commit;
end;
/

exec in_library_payments('HIFI_Library1003','Library_InOut1000',5000,'no',);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

create table transport_fee_payments(TR_Fee_Payment_Id varchar2(20) constraints tr_fee_pk primary key,
					TR_Enroll_Roaster_Id varchar2(20) references transport_enrollments_roaster(TR_Enroll_Roaster_Id),
					Transport_Route_Id varchar2(20) references transport(Transport_Route_Id),
					Transport_Fee_Amount number(11,2),
					Fee_To_Be_Paid_Before varchar2(20),
					Term_Id varchar2(20) references terms(Term_Id),
					Student_No varchar2(20) references student(Student_No),
					Fee_Amount number(11,2),
					Fee_Paid_Date date,
					Fee_Penalty number(11,2),
					Fee_Paid_Mode varchar2(20),
					Fee_Paid_By varchar2(50),
					Fee_Received_By varchar2(20) references staff(Staff_Id),
					Fee_Receipt_Id varchar2(20),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);

create sequence tr_fee_id
start with 1000
increment by 1;

create or replace procedure in_transport_fee_payments(TR_Enroll_Roaster_Id varchar2,Transport_Route_Id varchar2,Transport_Fee_Amount number,Fee_To_Be_Paid_Before varchar2,Term_Id varchar2,Student_No varchar2,Fee_Amount number,Fee_Paid_Date date,Fee_Penalty number,Fee_Paid_Mode varchar2,Fee_Paid_By varchar2,Fee_Received_By varchar2)
is
begin
insert into transport_fee_payments values('Tr_fee'||tr_fee_id.nextval,TR_Enroll_Roaster_Id,Transport_Route_Id,Transport_Fee_Amount,Fee_To_Be_Paid_Before,Term_Id,Student_No,Fee_Amount,Fee_Paid_Date,Fee_Penalty,Fee_Paid_Mode,Fee_Paid_By,Fee_Received_By,'HIFI_fee'||fee_receipt.nextval,user,sysdate,user,sysdate);
commit;
end;
/

exec in_transport_fee_payments('Tr_Roaster100','Route_100',10000,'no','Term_1','16HIFI1',5000,sysdate,NULL,'CASH','raju','HIFI_staff104');
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table attendence(Attendence_Id varchar2(20) constraints attendence_pk primary key,
			For_Year number(5) constraints attendence_check1 check(For_Year between 2000 and 2030),
			For_Month number(2) constraints attendence_check2 check(For_Month between 1 and 12),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_by varchar2(50),
			Last_Updation_Date date);

create sequence Attendence_Id
start with 1000
increment by 1;

create or replace procedure in_attendence(For_Year number,For_Month number)
is
begin
insert into attendence values('Attendence'||Attendence_Id.nextval,For_Year,For_Month,user,sysdate,user,sysdate);
commit;
end;
/

exec in_attendence(2016,7);
-------------------------------------------------------------------------------------------------------------------------------------------
create table section_wise_attendence(Sec_Att_Id varchar2(20) constraints SWA_pk primary key,
					Attendence_Id varchar2(20) references attendence(Attendence_Id),
					Class_Id varchar2(20) references class(Class_Id),
					Student_No varchar2(20) references student(Student_No),
					Day date,
					Present varchar2(20),
					Recorded_By varchar2(20) references staff(Staff_Id),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);

create sequence Sec_Att_Id
start with 1000
increment by 1;

create or replace procedure in_section_attendence(Attendence_Id varchar2,Class_Id varchar2,Student_No varchar2,Day date,Present varchar2,Recorded_By varchar2)
is
begin
insert into section_wise_attendence values('Sec_Att'||Sec_Att_Id.nextval,Attendence_Id,Class_Id,Student_No,Day,Present,Recorded_By,user,sysdate,user,sysdate);
commit;
end;
/

exec in_section_attendence('Attendence1000','10th_HIFI_1','16HIFI1',sysdate,'Y','HIFI_staff100');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table teacher_to_class(Teacher_To_Class_Id varchar2(20) constraints TTC_pk primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Class_Id varchar2(20) references class(Class_Id),
				Assigned_By varchar2(50),
				Assigned_Date date,
				Year varchar2(10),
				Assignment_Start_Date date,
				Assignment_End_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence TTC_Id
start with 100
increment by 1;

create or replace procedure in_teacher_to_class(Teacher_Id varchar2,Class_Id varchar2,Assigned_By varchar2,Assigned_Date date,Year varchar2,Assignment_Start_Date date,Assignment_End_Date date)
is
begin
insert into teacher_to_class values('class_teacher'||TTC_Id.nextval,Teacher_Id,Class_Id,Assigned_By,Assigned_Date,Year,Assignment_Start_Date,Assignment_End_Date,user,sysdate,user,sysdate);
commit;
end;
/

exec in_teacher_to_class('HIFI_Teacher140','10th_HIFI_1','xyz',sysdate,2016,'','');
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table teacher_attendence(Teacher_Att_Id varchar2(20) constraints teacher_Att_pk primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Year number(4) check(Year between 2000 and 2050),
				Month number(2) check(Month between 1 and 12),
				Day number(2) check(Day between 1 and 31),
				Present char(1) check(Present in('N','Y','L','M','P')),
				If_Leave_Approved_By varchar2(20) references staff(Staff_Id),
				Recorded_By varchar2(20) references staff(Staff_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence Teacher_Att_Id
start with 100
increment by 1;

create or replace procedure in_teacher_attendence(Teacher_Id varchar2,Year number,Month number,Day number,Present char,If_Leave_Approved_By varchar2,Recorded_By varchar2)
is
begin
insert into teacher_attendence values('Teacher_Att'||Teacher_Att_Id.nextval,Teacher_Id,Year,Month,Day,Present,If_Leave_Approved_By,Recorded_By,user,sysdate,user,sysdate);
commit;
end;
/

exec in_teacher_attendence('HIFI_Teacher140',2016,7,29,'Y','HIFI_staff101','HIFI_staff104');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table teacher_salary(Teacher_Salary_Id varchar2(20) constraints teacher_sal_pk primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Annual_Salary number(11,2),
				Year varchar2(20),
				Month varchar2(20),
				Gross_Sal number(11,2),
				Total_Deductions number(11,2),
				Net_Salary number(11,2),
				Income_Tax_Deducted number(11,2),
				Income_Tax_Amount number(11,2),
				Salary_Credited_To_Account varchar2(30),
				Credited_Mode varchar2(50),
				Credit_Initiated_By varchar2(50),
				Credit_Initiated_Date date,
				Additional_Comments varchar2(100),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence teacher_sal_Id
start with 1000
increment by 1;

create or replace procedure in_teacher_salary(Teacher_Id varchar2,Annual_Salary number,Salary_Credited_To_Account varchar2,Credited_Mode varchar2,Credit_Initiated_By varchar2,Credit_Initiated_Date date,Additional_Comments varchar2)
is
deductions integer;
gross_sal integer;
net_sal number(10,2);
incometax integer;
--incometax_amt integer;
begin
gross_sal:=Annual_Salary/12;
deductions:=0.1*gross_sal;
net_sal:=gross_sal-deductions;
	if net_sal<=20000 then
		insert into teacher_salary values('teacher_salary'||teacher_sal_Id.nextval,Teacher_Id,Annual_Salary,extract(Year from sysdate),extract(Month from sysdate),gross_sal,deductions,net_sal,NULL,NULL,Salary_Credited_To_Account,Credited_Mode,Credit_Initiated_By,Credit_Initiated_Date,Additional_Comments,user,sysdate,user,sysdate);
	elsif net_sal>20000 and net_sal<50000 then
		incometax:=10;
	elsif net_sal>50000 and net_sal<100000 then
		incometax:=20;
	else
		incometax:=30;
	end if;
insert into teacher_salary values('teacher_salary'||teacher_sal_Id.nextval,Teacher_Id,Annual_Salary,extract(Year from sysdate),extract(Month from sysdate),gross_sal,deductions,net_sal,incometax,(incometax/100)*net_sal,Salary_Credited_To_Account,Credited_Mode,Credit_Initiated_By,Credit_Initiated_Date,Additional_Comments,user,sysdate,user,sysdate);
commit;
end;
/


exec in_teacher_salary('HIFI_Teacher140',500000,'32060208194','cheque','raju',sysdate,'');
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table staff_attendence(Staff_Att_Id varchar2(20) constraints staff_att_pk primary key,
				Staff_Id varchar2(20) references staff(Staff_Id),
				Year number(4) constraints staff_att_check1 check(Year between 2000 and 2100),
				Month number(2) constraints staff_att_check2 check(Month between 1 and 12),
				Day number(2) check(Day between 1 and 31),
				Present char(1) check(Present in('N','Y','L','M','P')),
				If_Leave_Approved_By varchar2(20) references staff(Staff_Id),
				Recorded_By varchar2(20) references staff(Staff_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence staff_att_id
start with 100
increment by 1;

create or replace procedure in_staff_attendence(Staff_Id varchar2,Present char,If_Leave_Approved_By varchar2,Recorded_By varchar2)
is
begin
insert into staff_attendence values('staff_att_'||staff_att_id.nextval,Staff_Id,extract(year from sysdate),extract(month from sysdate),extract(day from sysdate),Present,If_Leave_Approved_By,Recorded_By,user,sysdate,user,sysdate);
commit;
end;
/

exec in_staff_attendence('HIFI_staff100','Y','','');
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table staff_salary(Staff_Salary_Id varchar2(20) constraints staff_sal_pk primary key,
				Staff_Id varchar2(20) references staff(Staff_Id),
				Annual_Salary number(11,2),
				Year varchar2(20),
				Month varchar2(20),
				Gross_Sal number(11,2),
				Total_Deductions number(11,2),
				Net_Salary number(11,2),
				Income_Tax_Deducted number(11,2),
				Income_Tax_Amount number(11,2),
				Salary_Credited_To_Account varchar2(30),
				Credited_Mode varchar2(20),
				Credit_Initiated_By varchar2(50),
				Credit_Initiated_Date date,
				Additional_Comments varchar2(100),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create sequence staff_sal_Id
start with 1000
increment by 1;

create or replace procedure in_staff_salary(Staff_Id varchar2,Annual_Salary number,Salary_Credited_To_Account varchar2,Credited_Mode varchar2,Credit_Initiated_By varchar2,Credit_Initiated_Date date,Additional_Comments varchar2)
is
deductions integer;
gross_sal integer;
net_sal number(10,2);
incometax integer;
begin
gross_sal:=Annual_Salary/12;
deductions:=0.1*gross_sal;
net_sal:=gross_sal-deductions;
	if net_sal<=20000 then
		insert into staff_salary values('staff_salary'||staff_sal_Id.nextval,Staff_Id,Annual_Salary,extract(Year from sysdate),extract(Month from sysdate),gross_sal,deductions,net_sal,NULL,NULL,Salary_Credited_To_Account,Credited_Mode,Credit_Initiated_By,Credit_Initiated_Date,Additional_Comments,user,sysdate,user,sysdate);
	elsif net_sal>20000 and net_sal<50000 then
		incometax:=10;
	elsif net_sal>50000 and net_sal<100000 then
		incometax:=20;
	else
		incometax:=30;
	end if;
		insert into staff_salary values('staff_salary'||staff_sal_Id.nextval,Staff_Id,Annual_Salary,extract(Year from sysdate),extract(Month from sysdate),gross_sal,deductions,net_sal,incometax,(incometax/100)*net_sal,Salary_Credited_To_Account,Credited_Mode,Credit_Initiated_By,Credit_Initiated_Date,Additional_Comments,user,sysdate,user,sysdate);
commit;
end;
/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table year_wise_book_master(Book_Id varchar2(20) constraints year_book_pk primary key,
					Book_Name varchar2(50),
					Year number(4) constraints year_book_check1 check(Year between 2000 and 2100),
					Month number(2) constraints year_book_check2 check(Month between 1 and 12),
					Day number(2) constraints year_book_check3 check(Day between 1 and 31),
					Author varchar2(50),
					Revision varchar2(50),
					If_Purchased_By varchar2(50),
					If_Purchased_Date date,
					Added_To_Library_By varchar2(50),
					Added_To_Library_Date date,
					Library_Rack_no varchar2(20),
					Library_Id varchar2(20) references library_master(Library_Id),
					Price number(11,2),
					Quantity number(3),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create sequence book_id
start with 1000
increment by 1;

create or replace procedure in_year_wise_book_master(Book_Name varchar2,Author varchar2,Revision varchar2,If_Purchased_By varchar2,If_Purchased_Date date,Added_To_Library_By varchar2,Added_To_Library_Date date,Library_Rack_no varchar2,Library_Id varchar2,Price number,Quantity number)
is
begin
insert into year_wise_book_master values('Book-'||book_id.nextval,Book_Name,extract(year from sysdate),extract(month from sysdate),extract(day from sysdate),Author,Revision,If_Purchased_By,If_Purchased_Date,Added_To_Library_By,Added_To_Library_Date,Library_Rack_no,Library_Id,Price,Quantity,user,sysdate,user,sysdate);
commit;
end;
/


exec in_year_wise_book_master('maths','','','','','','','','HIFI_Library1003',NULL,NULL);
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table section_wise_books(Section_Book_Id varchar2(20) constraints section_book_pk primary key,
				Book_set_Detail varchar2(255),
				For_Education_Year varchar2(20),
				Class_Id varchar2(20) references class(Class_Id),
				Book_Set_Approved_By varchar2(50),
				Book_Set_Approved_Date date,
				Set_Total_Books_Note number(3),
				Set_Total_Price number(11,2),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_updation_Date date);

create sequence section_book_id
start with 1000
increment by 1;

create or replace procedure in_section_wise_books(Book_set_Detail varchar2,For_Education_Year varchar2,Class_Id varchar2,Book_Set_Approved_By varchar2,Book_Set_Approved_Date date,Set_Total_Books_Note number,Set_Total_Price number)
is
begin
insert into section_wise_books values('section_book'||section_book_id.nextval,Book_set_Detail,For_Education_Year,Class_Id,Book_Set_Approved_By,Book_Set_Approved_Date,Set_Total_Books_Note,Set_Total_Price,user,sysdate,user,sysdate);
commit;
end;
/
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table book_issued_to_student(Book_Issue_To_Student varchar2(20) constraints book_issued_pk primary key,
					Student_No varchar2(20) references student(Student_No),
					Section_Book_Id varchar2(20) references section_wise_books(Section_Book_Id),
					LIOD_Id varchar2(20) references library_in_out_details(LIOD_Id),
					Library_Id varchar2(20) references library_master(Library_Id),
					Issued_By varchar2(20) references staff(Staff_Id),
					Issued_Date date,
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar2(50),
					Last_updation_Date date);
create sequence book_issue_student
start with 1000
increment by 1;

create or replace procedure in_book_issued_to_student(Student_No varchar2,Section_Book_Id varchar2,LIOD_Id varchar2,Library_Id varchar2,Issued_By varchar2,Issued_Date date)
is
begin
insert into book_issued_to_student values('book_to_student'||book_issue_student.nextval,Student_No,Section_Book_Id,LIOD_Id,Library_Id,Issued_By,Issued_date,user,sysdate,user,sysdate);
commit;
end;
/
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create table books_payments(Books_Payments_Id varchar2(20) constraints book_payments_pk primary key,
				Book_Issue_To_Student varchar2(20) references book_issued_to_student(Book_Issue_To_Student),
				Term_Id varchar2(20) references terms(Term_Id),
				Book_Id varchar2(20) references year_wise_book_master(Book_Id),
				Book_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(20),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id),
				Fee_receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_updation_Date date);

create sequence book_payments_id
start with 1000
increment by 1;

create or replace procedure in_book_payments(Book_Issue_To_Student varchar2,Term_Id varchar2,Book_Id varchar2,Book_Fee_Amount number,Fee_To_Be_Paid_Before varchar2,Student_No varchar2,Fee_Amount number,Fee_Paid_Date date,Fee_Penalty number,Fee_Paid_Mode varchar2,	Fee_Paid_By varchar2,Fee_Received_By varchar2)
is
begin
insert into books_payments values('Book_Payments_'||book_payments_id.nextval,Book_Issue_To_Student,Term_Id,Book_Id,Book_Fee_Amount,Fee_To_Be_Paid_Before,Student_No,Fee_Amount,Fee_Paid_Date,Fee_Penalty,Fee_Paid_Mode,Fee_Paid_By,Fee_Received_By,'HIFI_Fee'||fee_receipt.nextval,user,sysdate,user,sysdate);
commit;
end;
/

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----****END-TABLE CREATING & INSERTING DATA INTO TABLES****------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------
