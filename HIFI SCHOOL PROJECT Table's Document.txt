---------------HIFI SCHOOL PROJECT Table's Data----------------

create table student(Student_no varchar2(10) constraints pk_student primary key,
		Student_Name varchar2(50),
		Father_Name varchar2(50),
		Mother_Name varchar2(50),
		DOB date,
		DOJ date,
		Address varchar2(150),
		Admission_No number(10),
		Created_By varchar2(50),
		Creation_Date date,
		Last_Updated_by varchar2(50),
		Last_Updation_Date date);

create table class(Class_Id varchar2(50) constraints pk_Class primary key,
		   Class_No number(10),
		   class_Name varchar2(50),
		   Section_Name varchar2(50),
		   Section_Teacher varchar2(50),
		   Section_Incharge varchar2(50),
		   Section_Strength number(10),
		   Room_No number(15),
		   Year number(5),
		   Created_By varchar2(50),
		   Creation_Date date,
		   Last_Updated_By varchar2(50),
		   Last_Updation_Date date);

create table terms(	Term_Id varchar2(20) primary key,
			Term_Name varchar2(30),
			Term_Duration number(10),
			Term_Start_Date date,
			Term_End_date date,
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create table subjects(Subject_Id varchar2(20) primary key,
			Subject_Name varchar(50),
			Subject_Max_Marks number(10),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create table teachers(Teacher_Id varchar2(20) primary key,
			Teacher_Name varchar2(20) not null,
			DOB date,
			DOJ date,
			Gender char(6) check(Gender in('M','F','m','f','male','female','MALE','FEMALE','Female','Male')),
			Father_Name varchar2(50),
			Mother_Name varchar2(50),
			Spouse_Name varchar2(50),
			Grade varchar2(20),
			Insurance_Name varchar2(50),
			Insurance_Premium number(11,2),
			Insurance_Valid_Till date,
			Insured_amount number(11,2),
			Insurance_Number varchar2(40),
			Total_Experience number(5),
			Subject_Matter_Expert varchar2(30),
			Value_Additions varchar2(50),
			If_Refferenced_By varchar2(50),
			Interviewed_By varchar2(50),
			Interviewed_Date date,
			PAN_Card_Number varchar2(50),
			Bank_Account_Number number(30),
			Address varchar2(80),
			Email_Id varchar2(50),
			Mobile number(10) check(length(Mobile)=10) not null,--no need to add country code
			Emergency_Contact varchar2(50),
			Emergency_Contact_Mobile number(10) check(length(Emergency_Contact_Mobile)=10) not null,
			Previous_Organisation varchar2(50),
			Previous_Org_Annual_Income number(11,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create table staff(Staff_Id varchar2(20) primary key,
			Staff_Name varchar2(50) not null,
			DOB date,
			DOJ date,
			Gender varchar2(10) check(Gender in('M','F','m','f','male','female','MALE','FEMALE','Female','Male')),
			Father_Name varchar2(50),
			Mother_Name varchar2(50),
			Spouse_Name varchar2(50),
			Grade varchar2(20),
			Insurance_Name varchar2(50),
			Insurance_Premium number(11,2),
			Insurance_Valid_Till date,
			Insured_amount number(11,2),
			Insurance_Number varchar2(50),
			Total_Experience varchar2(20),
			Subject_Matter_Expert varchar2(50),
			Value_Additions varchar2(50),
			If_Refferenced_By varchar2(50),
			Interviewed_By varchar2(50),
			Interviewed_Date date,
			PAN_Card_Number varchar2(50),
			Bank_Account_Number varchar2(30),
			Address varchar2(100),
			Email_Id varchar2(50),
			Mobile number(10) check(length(Mobile)=10) not null,--no need to soecift country code
			Emergency_Contact varchar2(50),
			Emergency_Contact_Mobile number(10) check(length(Emergency_Contact_Mobile)=10) not null,
			Previous_Organisation varchar2(50),
			Previous_Org_Annual_Income number(11,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

/*create table marks(Marks_Id varchar2(5) primary key,
		Class_Id class.Class_Id%type constraints fk_marks1 references class(Class_Id),
		Student_No student.Student_No%type constraints fk_marks2 references student(Student_No),
		Term_Id terms.Term_Id%type constraints fk_marks3 rferences terms(Term_Id),
		Subject_Id subjects.Subject_Id%type constraints fk_marks4 references subjects(Subject_Id),
		Subject_Marks_Secured number(3),
		Answer_Sheet_Corrected_By teachers.Teacher_Id%type constraints fk_marks5 references teachers(Teacher_Id),
		Created_By varchar2(20),
		Creation_Date date,
		Last_Updated_By varchar2(20),
		Last_Updation_Date date);

create table marks(Marks_Id varchar2(5) primary key,
		Class_Id varchar2(10) constraints fk_marks1 references class(Class_Id),
		Student_No varchar2(20) constraints fk_marks2 references student(Student_No),
		Term_Id varchar2(20) constraints fk_marks3 rferences terms(Term_Id),
		Subject_Id varchar2(20) constraints fk_marks4 references subjects(Subject_Id),
		Subject_Marks_Secured number(3),
		Answer_Sheet_Corrected_By varchar2(20) constraints fk_marks5 references teachers(Teacher_Id),
		Created_By varchar2(20),
		Creation_Date date,
		Last_Updated_By varchar2(20),
		Last_Updation_Date date);

**ORA-02253: constraint specification not allowed here*/

create table marks(Marks_Id varchar2(20) primary key,
		Class_Id varchar2(20) references class(Class_Id),
		Student_No varchar2(20) references student(Student_No),
		Term_Id varchar2(20) references terms(Term_Id),
		Subject_Id varchar2(20) references subjects(Subject_Id),
		Subject_Marks_Secured number(4),
		Answer_Sheet_Corrected_By varchar2(50) references teachers(Teacher_Id),
		Created_By varchar2(50),
		Creation_Date date,
		Last_Updated_By varchar2(20),
		Last_Updation_Date date);

create table term_result(TWR_Id varchar2(20) primary key,
			Term_Id varchar2(20) references terms(Term_Id),
			Student_No varchar2(20) references student(Student_No),
			Result char(4) check(Result in('pass','fail','PASS','FAIL','Fail','Pass')),
			Result_Given_By varchar2(20) references teachers(Teacher_Id),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create table fee_master(Fee_Id varchar2(20) primary key,
			Fee_Description varchar2(50) not null,
			Fee_For_Year varchar2(10),
			Fee_Validity_Start_Date date,
			Fee_validity_End_Date date,
			Discount_General number(9,2),
			Discount_If_Referral number(9,2),
			Discount_If_Exam_Qualified number(9,2),
			Discount_If_Topper number(9,2),
			Discount_special_Case number(9,2),
			Discount_If_Handicapped number(9,2),
			Discount_If_Staff_Referral number(9,2),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar2(50),
			Last_Updation_Date date);

create table class_wise_fee(CWF_Id varchar2(20) primary key,
				Class_Is varchar2(20) references class(Class_Id),
				Fee_Id varchar(20) references fee_master(Fee_Id),
				Fee_Per_Year number(11,2),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create table term_wise_fee_payments(TWFP varchar2(20) primary key,
					Term_Id varchar2(20) references terms(Term_Id),
					Fee_Id varchar2(20) references fee_master(Fee_Id),
					Term_Fee_To_Be_Paid_Before varchar2(5) check(Term_Fee_To_Be_Paid_Before in('yes','no','YES','NO','No','Yes')),
					Student_NO varchar2(20) references student(Student_No),
					Fee_Amount number(11,2),
					Fee_Paid_Date date,
					Fee_penalty number(11,2),
					Fee_Paid_Mode varchar2(30),
					Fee_Paid_By varchar2(30),
					Fee_Received_By varchar2(20) references staff(Staff_Id),
					Fee_Receipt_Id varchar(20),
					Created_By varchar2(30),
					Creation_Date date,
					Last_Updated_By varchar2(30),
					Last_Updation_Date date);

create table sports_Master(Sports_Id varchar2(20) primary key,
				Sports_Description varchar2(50),
				Kits_Available varchar2(5) check(Kits_Available in('yes','no','YES','NO','No','Yes')),
				Kits_Used varchar(50),
				Kits_Refilled_By varchar2(50),
				Kits_Checked_By varchar2(50),
				If_Donated_By varchar2(50),
				If_Donated_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar(50),
				Last_Updation_Date date);

create table class_wise_sports(CWS_Id varchar2(20) primary key,
				Sports_Id varchar2(20) references sports_Master(Sports_Id),
				Class_Id varchar2(20) references class(Class_Id),
				Allocation_To_Section_By varchar2(50),
				Allocation_To_Section_Date date,
				Change_Notes varchar2(80),
				Change_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create table sports_participation(Sports_Part_Id varchar2(20) primary key,
					Sports_Id varchar2(20) references sports_master(Sports_Id),
					CWS_Id varchar2(20) references class_wise_sports(CWS_Id),
					Student_No varchar2(10) references student(Student_No),
					Participation_Date date,
					Prize_Name varchar2(50),
					Prize_Date date,
					Prize_Given_By varchar2(50),
					Prize_For varchar2(50),
					Coach_Comments varchar2(100),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create table sports_fee_payments(Sports_Fee_Payment_Id varchar2(50) primary key,
				Term_Id varchar2(20) references terms(Term_Id),
				Sports_Id varchar2(20) references sports_master(Sports_Id),
				Sports_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(30),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id) not null,
				Fee_Receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar(50),
				Last_Updation_Date date);

create table extra_curr_act_master(Extra_Curr_Act_Id varchar2(20) primary key,
					Extra_Curr_Act_Desc varchar2(50),
					Kits_Available varchar2(20),--'yes or 'no'
					Kits_Used varchar2(50),
					Kits_Refilled_By varchar2(50),
					Kits_Checked_By varchar2(50),
					Kits_Checked_Date date,
					If_Donated_By varchar2(50),
					If_Donation_Date date,
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create table extra_curr_act_participation(ECAP_ID varchar2(20) primary key,
						Extra_Curr_Act_Id varchar2(20) references extra_curr_act_master(Extra_Curr_Act_Id),
						Student_No varchar2(20) references student(Student_No),
						Participation_Date date,
						Prize_Name varchar2(50),
						Prize_Date date,
						Prize_Given_By varchar2(50),
						Prize_For varchar2(50),
						Coach_Comments varchar2(100),
						Created_By varchar2(50),
						Creation_Date date,
						Last_Updated_By varchar2(50),
						Last_Updation_Date date); 

create table extra_curr_act_payments(ECAFP_Id varchar2(20) primary key,
					ECAP_Id varchar2(20) references extra_curr_act_participation(ECAP_ID),
					Extra_Curr_Act_Id varchar2(20) references extra_curr_act_master(Extra_Curr_Act_Id),
					Extra_Curr_Fee_Amount number(11,2),
					Fee_To_Be_Paid_Before varchar2(20),
					Student_No varchar2(20) references student(Student_No),
					Fee_Amount number(11,2),
					Fee_Paid_Date date,
					Fee_Penalty number(11,2),
					Fee_Paid_Mode varchar2(20),
					Fee_Paid_By varchar2(50),
					Fee_Received_By varchar2(20) references staff(Staff_Id),
					Fee_Receipt_Id varchar2(20),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);

create table library_master(Library_Id varchar2(20) primary key,
				Arranged_Year varchar2(5),
				Rack_No varchar2(20),
				Book_Id_If_exists varchar2(30),
				Book_Name varchar2(50),
				Book_Category varchar2(30),
				Author varchar2(50),
				Book_Version varchar2(50),
				Useful_For_Section varchar2(20) references class(Class_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create table library_in_out_details(LIOD_Id varchar2(20) primary key,
					Library_Id varchar(20) references library_master(Library_Id),
					Book_Issued_To_Student varchar2(20) references student(Student_No),
					Book_Issued_By varchar2(50),
					Book_Issud_To varchar2(50),
					Book_Return_Due_Date date,
					Actual_Book_Returned_Date date,
					Book_Collected_By varchar2(20) references staff(Staff_Id),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);

create table library_payments(Lib_Payment_Id varchar2(20) primary key,
				Library_Id varchar2(20) references library_master(Library_Id),
				LIOD_Id varchar2(20) references library_in_out_details(LIOD_Id),
				Library_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(50),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id),
				Fee_Receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_by varchar2(50),
				Last_Updation_Date date);

create type Vehicle_List is varray(20) of varchar2(20);

create table transport(Transport_Route_Id varchar2(20) primary key,
			Route_Id varchar2(20),Route_Name varchar2(20),
			Route_Planned_Month_Year varchar2(20),
			Route_Valid_Till date,
			Route_Coordinator varchar2(50),
			Route_Grievance_Officer varchar2(50),
			Route_Grievance_Ph_No number(10) check(length(Route_Grievance_Ph_No)=10),
			Route_Vehicle_Number_List Vehicle_List,
			Route_Distance number(5),
			Route_TAT_Estimation varchar2(20),
			Route_TAT_Estimation_By varchar2(50),
			Route_Start_Point varchar2(30),
			Route_End_Point varchar2(30),
			Route_Prime_Driver varchar2(20) references staff(Staff_Id),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_By varchar(50),
			Last_Updation_Date date);

create table transport_enrollments_roaster(TR_Enroll_Roaster_Id varchar2(20) primary key,
						Transport_Route_Id varchar2(50) references transport(Transport_Route_Id),
						Student_No varchar2(20) references student(Student_No),
						Enrollment_Date date,
						Enrollment_Start_Date date,
						Enrollment_End_Date date,
						Created_By varchar2(50),
						Creation_Date date,
						Last_Updated_By varchar(50),
						Last_Updation_Date date);

create table transport_fee_payments(TR_Fee_Payment_Id varchar2(20) primary key,
					TR_Enroll_Roaster_Id varchar2(20) references transport_enrollments_roaster(TR_Enroll_Roaster_Id),
					Transport_Route_Id varchar2(20) references transport(Transport_Route_Id),
					Transport_Fee_Amount number(11,2),
					Fee_To_Be_Paid_Before varchar2(20),
					Term_Id varchar2(20) references terms(Term_Id),
					Student_No varchar2(20) references student(Student_No),
					Fee_Amount number(11,2),
					Fee_Paid_Date date,
					Fee_Penalty number(11,2),
					Fee_Paid_Mode varchar2(20),
					Fee_Paid_By varchar2(50),
					Fee_Received_By varchar2(20) references staff(Staff_Id),
					Fee_Receipt_Id varchar2(20),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);

create table attendence(Attendence_Id varchar2(20) primary key,
			For_Year number(5) check(For_Year between 2000 and 2030),
			For_Month number(2) check(For_Month between 1 and 12),
			Created_By varchar2(50),
			Creation_Date date,
			Last_Updated_by varchar2(50),
			Last_Updation_Date date);

create table section_wise_attendence(Sec_Att_Id varchar2(20) primary key,
					Attendence_Id varchar2(20) references attendence(Attendence_Id),
					Class_Id varchar2(20) references class(Class_Id),
					Student_No varchar2(20) references student(Student_No),
					Day date,
					Present varchar2(20),
					Recorded_By varchar2(20) references staff(Staff_Id),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_by varchar2(50),
					Last_Updation_Date date);



create table teacher_to_class(Teacher_To_Class_Id varchar2(20) primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Class_Id varchar2(20) references class(Class_Id),
				Assigned_By varchar2(50),
				Assigned_Date date,
				Year varchar2(10),
				Assignment_Start_Date date,
				Assignment_End_Date date,
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create table teacher_attendence(Teacher_Att_Id varchar2(20) primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Year number(4) check(Year between 2000 and 2050),
				Month number(2) check(Month between 1 and 12),
				Day number(2) check(Day between 1 and 31),
				Present char(1) check(Present in('N','Y','L','M','P')),
				If_Leave_Approved_By varchar2(20) references staff(Staff_Id),
				Recorded_By varchar2(20) references staff(Staff_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create table teacher_salary(Teacher_Salary_Id varchar2(20) primary key,
				Teacher_Id varchar2(20) references teachers(Teacher_Id),
				Annual_Salary number(11,2),
				Year varchar2(20),
				Month varchar2(20),
				Gross_Sal number(11,2),
				Total_Deductions number(11,2),
				Net_Salary number(11,2),
				Income_Tax_Deducted number(11,2),
				Income_Tax_Amount number(11,2),
				Salary_Credited_To_Account varchar2(30),
				Credited_Mode varchar2(50),
				Credit_Initiated_By varchar2(50),
				Credit_Initiated_Date date,
				Additional_Comments varchar2(100),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);



create table staff_attendence(Staff_Att_Id varchar2(20) primary key,
				Staff_Id varchar2(20) references staff(Staff_Id),
				Year number(4) check(Year between 2000 and 2100),
				Month number(2) check(Month between 1 and 12),
				Day number(2) check(Day between 1 and 31),
				Present char(1) check(Present in('N','Y','L','M','P')),
				If_Leave_Approved_By varchar2(20) references staff(Staff_Id),
				Recorded_By varchar2(20) references staff(Staff_Id),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create table staff_salary(Staff_Salary_Id varchar2(20) primary key,
				Staff_Id varchar2(20) references staff(Staff_Id),
				Annual_Salary number(11,2),
				Year varchar2(20),
				Month varchar2(20),
				Gross_Sal number(11,2),
				Total_Deductions number(11,2),
				Net_Salary number(11,2),
				Income_Tax_Deducted number(11,2),
				Income_Tax_Amount number(11,2),
				Salary_Credited_To_Account varchar2(30),
				Credited_Mode varchar2(20),
				Credit_Initiated_By varchar2(50),
				Credit_Initiated_Date date,
				Additional_Comments varchar2(100),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_Updation_Date date);

create table year_wise_book_master(Book_Id varchar2(20) primary key,
					Book_Name varchar2(50),
					Year number(4) check(Year between 2000 and 2100),
					Month number(2) check(Month between 1 and 12),
					Day number(2) check(Day between 1 and 31),
					Author varchar2(50),
					REvision varchar2(50),
					If_Purchased_By varchar2(50),
					If_Purchased_Date date,
					Added_To_Library_By varchar2(50),
					Added_To_Library_Date date,
					Library_Rack_no varchar2(20),
					Library_Id varchar2(20) references library_master(Library_Id),
					Price number(11,2),
					Quantity number(3),
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar(50),
					Last_Updation_Date date);
create table section_wise_books(Section_Book_Id varchar2(20) primary key,
				Book_set_Detail varchar2(255),
				For_Education_Year number(10),
				Class_Id varchar2(20) references class(Class_Id),
				Book_Set_Approved_By varchar2(50),
				Book_Set_Approved_Date date,
				Set_Total_Books_Note number(3),
				Set_Total_Price number(11,2),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_updation_Date date);

create table book_issued_to_student(Book_Issue_To_Student varchar2(20) primary key,
					Student_No varchar2(20) references student(Student_No),
					Section_Book_Id varchar2(20) references section_wise_books(Section_Book_Id),
					LIOD_Id varchar2(20) references library_in_out_details(LIOD_Id),
					Library_Id varchar2(20) references library_master(Library_Id),
					Issued_By varchar2(20) references staff(Staff_Id),
					Issued_Date date,
					Created_By varchar2(50),
					Creation_Date date,
					Last_Updated_By varchar2(50),
					Last_updation_Date date);

create table books_payments(Books_Payments_Id varchar2(20) primary key,
				Book_Issue_To_Student varchar2(20) references book_issued_to_student(Book_Issue_To_Student),
				Term_Id varchar2(20) references terms(Term_Id),
				Book_Id varchar2(20) references year_wise_book_master(Book_Id),
				Book_Fee_Amount number(11,2),
				Fee_To_Be_Paid_Before varchar2(20),
				Student_No varchar2(20) references student(Student_No),
				Fee_Amount number(11,2),
				Fee_Paid_Date date,
				Fee_Penalty number(11,2),
				Fee_Paid_Mode varchar2(20),
				Fee_Paid_By varchar2(50),
				Fee_Received_By varchar2(20) references staff(Staff_Id),
				Fee_receipt_Id varchar2(20),
				Created_By varchar2(50),
				Creation_Date date,
				Last_Updated_By varchar2(50),
				Last_updation_Date date);